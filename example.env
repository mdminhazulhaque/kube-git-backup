# Example environment configuration for Kube Git Backup
# Copy this file and customize it for your environment

# Git Repository Configuration (REQUIRED)
# For SSH authentication:
GIT_REPOSITORY=git@github.com:your-org/kube-backup.git
GIT_SSH_KEY_PATH=/etc/ssh-key/id_rsa

# For HTTPS with token authentication:
# GIT_REPOSITORY=https://github.com/your-org/kube-backup.git
# GIT_TOKEN=your_github_token_here

# Git Branch and Author Settings
GIT_BRANCH=main
GIT_AUTHOR_NAME=Kube Git Backup
GIT_AUTHOR_EMAIL=kube-backup@your-domain.com

# Authentication Method (auto-detected based on repository URL)
# - HTTPS URLs will automatically use token authentication
# - SSH URLs will automatically use SSH key authentication
# Optional: Override auto-detection with GIT_AUTH_METHOD=ssh or GIT_AUTH_METHOD=token

# Backup Configuration
BACKUP_INTERVAL=1h
WORK_DIR=/tmp/kube-git-backup

# Resource Filtering
# Include specific resource types (comma-separated)
INCLUDE_RESOURCES=deployments,daemonsets,statefulsets,services,configmaps,secrets,ingresses,namespaces,roles,rolebindings,clusterroles,clusterrolebindings,serviceaccounts,persistentvolumes,persistentvolumeclaims,storageclasses,networkpolicies

# Exclude specific resource types (comma-separated)
EXCLUDE_RESOURCES=pods,events,endpoints,replicasets

# Namespace Configuration
# Include specific namespaces (comma-separated, leave empty for all)
# INCLUDE_NAMESPACES=production,staging,monitoring

# Exclude specific namespaces (comma-separated)
EXCLUDE_NAMESPACES=kube-system,default,kube-node-lease

# YAML Sanitization - Fields to strip from YAML (comma-separated)
STRIP_FIELDS=metadata.uid,metadata.selfLink,metadata.resourceVersion,metadata.generation,metadata.creationTimestamp,metadata.annotations[kubectl.kubernetes.io/last-applied-configuration],status,spec.clusterIP,spec.clusterIPs,spec.ports[].nodePort

# Additional Examples:
# 
# To backup only production namespaces:
# NAMESPACES=production,prod-api,prod-web
#
# To include only core resources:
# INCLUDE_RESOURCES=deployments,services,configmaps
#
# To backup every 30 minutes:
# BACKUP_INTERVAL=30m
#
# To strip custom annotations:
# STRIP_FIELDS=metadata.uid,metadata.resourceVersion,status,metadata.annotations[custom.io/timestamp]
